# Default values for chronicle-demo
# This is a YAML-formatted file.

# Global configuration
global:
  imageRegistry: ""
  imagePullSecrets: []
  storageClass: ""

# Application configuration
app:
  name: chronicle-demo
  version: "1.0.0"

# Image configuration
image:
  registry: image-registry.openshift-image-registry.svc:5000
  repository: chronicle-demo/chronicle-demo
  tag: "latest"
  pullPolicy: Always
  pullSecrets: []

# OpenShift specific configuration
openshift:
  # Create OpenShift Route instead of Ingress
  route:
    enabled: true
    host: ""
    tls:
      enabled: true
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
    annotations: {}
  
  # Security Context Constraints
  scc:
    create: true
    name: chronicle-demo-scc
    allowPrivilegedContainer: false
    allowPrivilegeEscalation: false
    requiredDropCapabilities:
      - ALL
    allowedCapabilities: []
    runAsUser:
      type: MustRunAsRange
      uidRangeMin: 1000
      uidRangeMax: 2000
    seLinuxContext:
      type: MustRunAs
    fsGroup:
      type: MustRunAs

# Deployment configuration
deployment:
  replicaCount: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  
  # Pod configuration
  podAnnotations: {}
  podLabels: {}
  
  # Security context
  securityContext:
    runAsNonRoot: true
    runAsUser: 1001
    runAsGroup: 1001
    fsGroup: 1001
    seccompProfile:
      type: RuntimeDefault
  
  containerSecurityContext:
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: false
    runAsNonRoot: true
    runAsUser: 1001
    runAsGroup: 1001
    capabilities:
      drop:
        - ALL

# Service configuration
service:
  type: ClusterIP
  port: 8080
  targetPort: 8080
  annotations: {}

# Resource configuration
resources:
  limits:
    cpu: 2000m
    memory: 4Gi
  requests:
    cpu: 1000m
    memory: 2Gi

# JVM configuration
jvm:
  opts: >-
    -Xmx2g -Xms1g -XX:+UseG1GC -XX:+UnlockExperimentalVMOptions
    --add-opens java.base/java.lang.reflect=ALL-UNNAMED
    --add-opens java.base/java.nio=ALL-UNNAMED
    --add-opens java.base/sun.nio.ch=ALL-UNNAMED
    --add-opens java.base/java.lang=ALL-UNNAMED
    --add-opens java.base/java.util=ALL-UNNAMED
    --add-exports jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED
    --add-exports jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED

# Environment variables
env:
  - name: JAVA_OPTS
    value: "$(JVM_OPTS)"
  - name: LOG_LEVEL
    value: "INFO"
  - name: CHRONICLE_DATA_PATH
    value: "/app/chronicle-demo-data"

# Health checks
healthCheck:
  enabled: true
  livenessProbe:
    httpGet:
      path: /
      port: 8080
    initialDelaySeconds: 60
    periodSeconds: 30
    timeoutSeconds: 10
    failureThreshold: 3
    successThreshold: 1
  
  readinessProbe:
    httpGet:
      path: /
      port: 8080
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
  
  startupProbe:
    httpGet:
      path: /
      port: 8080
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 30
    successThreshold: 1

# Persistent storage configuration
persistence:
  enabled: true
  storageClass: ""
  accessMode: ReadWriteOnce
  size: 10Gi
  mountPath: /app/chronicle-demo-data
  annotations: {}

# Horizontal Pod Autoscaler
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60

# Pod Disruption Budget
podDisruptionBudget:
  enabled: true
  minAvailable: 1

# Network Policy
networkPolicy:
  enabled: true
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: openshift-ingress
      ports:
        - protocol: TCP
          port: 8080
  egress:
    - {}

# Service Account
serviceAccount:
  create: true
  name: ""
  annotations: {}

# RBAC
rbac:
  create: true

# Monitoring configuration
monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    interval: 30s
    scrapeTimeout: 10s
    path: /metrics
    labels: {}
    annotations: {}

# ConfigMap for application configuration
configMap:
  enabled: true
  data:
    application.properties: |
      # Chronicle Demo Configuration
      chronicle.map.entries=100000
      chronicle.queue.path=/app/chronicle-demo-data/queues
      chronicle.benchmark.enabled=true
      logging.level.com.demo=INFO
      logging.level.net.openhft=WARN

# Secrets (if needed)
secrets:
  enabled: false
  data: {}

# Node selection
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity rules
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - chronicle-demo
        topologyKey: kubernetes.io/hostname

# Pod priority
priorityClassName: ""

# Init containers
initContainers: []

# Sidecar containers
sidecars: []

# Extra volumes
extraVolumes: []

# Extra volume mounts
extraVolumeMounts: []

# Lifecycle hooks
lifecycle: {}

# Pod annotations for OpenShift
podAnnotations:
  openshift.io/scc: chronicle-demo-scc

# Labels
labels:
  app.kubernetes.io/name: chronicle-demo
  app.kubernetes.io/instance: chronicle-demo
  app.kubernetes.io/version: "1.0.0"
  app.kubernetes.io/component: application
  app.kubernetes.io/part-of: chronicle-demo
  app.kubernetes.io/managed-by: Helm